; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29335.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	IID_IXAudio2Extension
PUBLIC	IID_IXAudio2
PUBLIC	?width@@3IA					; width
PUBLIC	?height@@3IA					; height
CONST	SEGMENT
$SG141083 DB	'COMPUTE_SHADER_TEST', 00H
$SG117260 DB	', ', 00H
	ORG $+1
$SG141084 DB	'COMPUTE_SHADER_TEST', 00H
$SG117256 DB	'true', 00H
	ORG $+3
$SG117257 DB	'false', 00H
	ORG $+2
$SG117261 DB	', ', 00H
	ORG $+1
$SG117262 DB	', ', 00H
	ORG $+1
$SG117265 DB	', ', 00H
	ORG $+1
$SG117267 DB	', ', 00H
	ORG $+1
$SG117268 DB	', ', 00H
	ORG $+1
$SG117270 DB	', ', 00H
	ORG $+1
$SG117271 DB	', ', 00H
	ORG $+1
$SG117272 DB	', ', 00H
CONST	ENDS
_DATA	SEGMENT
?width@@3IA DD	0500H					; width
?height@@3IA DD	02d0H					; height
_DATA	ENDS
;	COMDAT IID_IXAudio2
CONST	SEGMENT
IID_IXAudio2 DD	02b02e3cfH
	DW	02e0bH
	DW	04ec3H
	DB	0beH
	DB	045H
	DB	01bH
	DB	02aH
	DB	03fH
	DB	0e7H
	DB	021H
	DB	0dH
CONST	ENDS
;	COMDAT IID_IXAudio2Extension
CONST	SEGMENT
IID_IXAudio2Extension DD 084ac29bbH
	DW	0d619H
	DW	044d2H
	DB	0b1H
	DB	097H
	DB	0e4H
	DB	0acH
	DB	0f7H
	DB	0dfH
	DB	03eH
	DB	0d6H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?HRESULT_FROM_WIN32@@YAJK@Z			; HRESULT_FROM_WIN32
PUBLIC	WinMain
PUBLIC	??0Vector3@@QEAA@T__m128@@@Z			; Vector3::Vector3
PUBLIC	??0Vector3@@QEAA@M@Z				; Vector3::Vector3
PUBLIC	??0Vector3@@QEAA@MMM@Z				; Vector3::Vector3
PUBLIC	??4Vector3@@QEAAXT0@@Z				; Vector3::operator=
PUBLIC	??XVector3@@QEAAXAEAT0@@Z			; Vector3::operator*=
PUBLIC	??0Vector4@@QEAA@MMMM@Z				; Vector4::Vector4
PUBLIC	??0Matrix4@@QEAA@XZ				; Matrix4::Matrix4
PUBLIC	?lookAt@@YA?ATMatrix4@@TVector3@@00@Z		; lookAt
PUBLIC	??$IID_PPV_ARGS_Helper@UIDXGIFactory6@@@@YAPEAPEAXPEAPEAUIDXGIFactory6@@@Z ; IID_PPV_ARGS_Helper<IDXGIFactory6>
PUBLIC	??$IID_PPV_ARGS_Helper@UIDXGIAdapter1@@@@YAPEAPEAXPEAPEAUIDXGIAdapter1@@@Z ; IID_PPV_ARGS_Helper<IDXGIAdapter1>
PUBLIC	?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z		; WindowProc
PUBLIC	??$IID_PPV_ARGS_Helper@UID3D12Debug@@@@YAPEAPEAXPEAPEAUID3D12Debug@@@Z ; IID_PPV_ARGS_Helper<ID3D12Debug>
PUBLIC	??$IID_PPV_ARGS_Helper@UIDXGIFactory4@@@@YAPEAPEAXPEAPEAUIDXGIFactory4@@@Z ; IID_PPV_ARGS_Helper<IDXGIFactory4>
PUBLIC	??$IID_PPV_ARGS_Helper@UIDXGIAdapter@@@@YAPEAPEAXPEAPEAUIDXGIAdapter@@@Z ; IID_PPV_ARGS_Helper<IDXGIAdapter>
PUBLIC	??$IID_PPV_ARGS_Helper@UID3D12Device@@@@YAPEAPEAXPEAPEAUID3D12Device@@@Z ; IID_PPV_ARGS_Helper<ID3D12Device>
PUBLIC	??$IID_PPV_ARGS_Helper@UID3D12CommandQueue@@@@YAPEAPEAXPEAPEAUID3D12CommandQueue@@@Z ; IID_PPV_ARGS_Helper<ID3D12CommandQueue>
PUBLIC	??$IID_PPV_ARGS_Helper@UID3D12DescriptorHeap@@@@YAPEAPEAXPEAPEAUID3D12DescriptorHeap@@@Z ; IID_PPV_ARGS_Helper<ID3D12DescriptorHeap>
PUBLIC	??$IID_PPV_ARGS_Helper@UID3D12Resource@@@@YAPEAPEAXPEAPEAUID3D12Resource@@@Z ; IID_PPV_ARGS_Helper<ID3D12Resource>
PUBLIC	??$IID_PPV_ARGS_Helper@UID3D12CommandAllocator@@@@YAPEAPEAXPEAPEAUID3D12CommandAllocator@@@Z ; IID_PPV_ARGS_Helper<ID3D12CommandAllocator>
PUBLIC	??$IID_PPV_ARGS_Helper@UID3D12GraphicsCommandList@@@@YAPEAPEAXPEAPEAUID3D12GraphicsCommandList@@@Z ; IID_PPV_ARGS_Helper<ID3D12GraphicsCommandList>
PUBLIC	??$IID_PPV_ARGS_Helper@UID3D12Fence@@@@YAPEAPEAXPEAPEAUID3D12Fence@@@Z ; IID_PPV_ARGS_Helper<ID3D12Fence>
PUBLIC	_GUID_c1b6694f_ff09_44a9_b03c_77900a0a1d17
PUBLIC	_GUID_29038f61_3839_4626_91fd_086879011a05
PUBLIC	_GUID_189819f1_1db6_4b57_be54_1821339b85f7
PUBLIC	_GUID_344488b7_6846_474b_b989_f027448245e0
PUBLIC	_GUID_1bc6ea02_ef36_464f_bf0c_21ca39e5168a
PUBLIC	_GUID_2411e7e1_12ac_4ccf_bd14_9798e8534dc0
PUBLIC	_GUID_0ec870a6_5d7e_4c22_8cfc_5baae07616ed
PUBLIC	_GUID_8efb471d_616c_4f49_90f7_127bb763fa51
PUBLIC	_GUID_696442be_a72e_4059_bc79_5b5c98040fad
PUBLIC	_GUID_6102dee4_af59_4b09_b999_b44d73f09b24
PUBLIC	_GUID_5b160d0f_ac1b_4185_8ba8_b3ae42a5a455
PUBLIC	_GUID_0a753dcf_c4d8_4b91_adf6_be5a60d95a76
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__xmm@00000000000000000000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp_GetLastError:PROC
EXTRN	__imp_WaitForSingleObjectEx:PROC
EXTRN	__imp_CreateEventA:PROC
EXTRN	__imp_TranslateMessage:PROC
EXTRN	__imp_DispatchMessageA:PROC
EXTRN	__imp_PeekMessageA:PROC
EXTRN	__imp_DefWindowProcA:PROC
EXTRN	__imp_RegisterClassExA:PROC
EXTRN	__imp_CreateWindowExA:PROC
EXTRN	__imp_ShowWindow:PROC
EXTRN	__imp_GetSystemMetrics:PROC
EXTRN	__imp_AdjustWindowRect:PROC
EXTRN	__imp_LoadCursorA:PROC
EXTRN	exit:PROC
EXTRN	D3D12CreateDevice:PROC
EXTRN	D3D12GetDebugInterface:PROC
EXTRN	CreateDXGIFactory2:PROC
EXTRN	DXGIDeclareAdapterRemovalSupport:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	sqrt:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?HRESULT_FROM_WIN32@@YAJK@Z DD imagerel $LN5
	DD	imagerel $LN5+53
	DD	imagerel $unwind$?HRESULT_FROM_WIN32@@YAJK@Z
pdata	ENDS
pdata	SEGMENT
$pdata$WinMain DD imagerel $LN38
	DD	imagerel $LN38+3563
	DD	imagerel $unwind$WinMain
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Vector3@@QEAA@M@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$??0Vector3@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Vector3@@QEAA@MMM@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0Vector3@@QEAA@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??XVector3@@QEAAXAEAT0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??XVector3@@QEAAXAEAT0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Vector4@@QEAA@MMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??0Vector4@@QEAA@MMMM@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??G@YA?ATVector3@@T0@0@Z DD imagerel ??G@YA?ATVector3@@T0@0@Z
	DD	imagerel ??G@YA?ATVector3@@T0@0@Z+75
	DD	imagerel $unwind$??G@YA?ATVector3@@T0@0@Z
$pdata$??G@YA?ATVector3@@T0@@Z DD imagerel ??G@YA?ATVector3@@T0@@Z
	DD	imagerel ??G@YA?ATVector3@@T0@@Z+79
	DD	imagerel $unwind$??G@YA?ATVector3@@T0@@Z
$pdata$?length@@YAMTVector3@@@Z DD imagerel ?length@@YAMTVector3@@@Z
	DD	imagerel ?length@@YAMTVector3@@@Z+117
	DD	imagerel $unwind$?length@@YAMTVector3@@@Z
$pdata$?normalOf@@YA?ATVector3@@T1@@Z DD imagerel ?normalOf@@YA?ATVector3@@T1@@Z
	DD	imagerel ?normalOf@@YA?ATVector3@@T1@@Z+237
	DD	imagerel $unwind$?normalOf@@YA?ATVector3@@T1@@Z
$pdata$?cross@@YA?ATVector3@@T1@0@Z DD imagerel ?cross@@YA?ATVector3@@T1@0@Z
	DD	imagerel ?cross@@YA?ATVector3@@T1@0@Z+275
	DD	imagerel $unwind$?cross@@YA?ATVector3@@T1@0@Z
$pdata$?lookAt@@YA?ATMatrix4@@TVector3@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+1276
	DD	imagerel $unwind$?lookAt@@YA?ATMatrix4@@TVector3@@00@Z
$pdata$?getD3D12HardwareAdapter@@YAXPEAUIDXGIFactory1@@PEAPEAUIDXGIAdapter1@@@Z DD imagerel ?getD3D12HardwareAdapter@@YAXPEAUIDXGIFactory1@@PEAPEAUIDXGIAdapter1@@@Z
	DD	imagerel ?getD3D12HardwareAdapter@@YAXPEAUIDXGIFactory1@@PEAPEAUIDXGIAdapter1@@@Z+446
	DD	imagerel $unwind$?getD3D12HardwareAdapter@@YAXPEAUIDXGIFactory1@@PEAPEAUIDXGIAdapter1@@@Z
$pdata$?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z DD imagerel $LN6
	DD	imagerel $LN6+84
	DD	imagerel $unwind$?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@00000000000000000000000000000000
CONST	SEGMENT
__xmm@00000000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT _GUID_0a753dcf_c4d8_4b91_adf6_be5a60d95a76
CONST	SEGMENT
_GUID_0a753dcf_c4d8_4b91_adf6_be5a60d95a76 DD 0a753dcfH
	DW	0c4d8H
	DW	04b91H
	DB	0adH
	DB	0f6H
	DB	0beH
	DB	05aH
	DB	060H
	DB	0d9H
	DB	05aH
	DB	076H
CONST	ENDS
;	COMDAT _GUID_5b160d0f_ac1b_4185_8ba8_b3ae42a5a455
CONST	SEGMENT
_GUID_5b160d0f_ac1b_4185_8ba8_b3ae42a5a455 DD 05b160d0fH
	DW	0ac1bH
	DW	04185H
	DB	08bH
	DB	0a8H
	DB	0b3H
	DB	0aeH
	DB	042H
	DB	0a5H
	DB	0a4H
	DB	055H
CONST	ENDS
;	COMDAT _GUID_6102dee4_af59_4b09_b999_b44d73f09b24
CONST	SEGMENT
_GUID_6102dee4_af59_4b09_b999_b44d73f09b24 DD 06102dee4H
	DW	0af59H
	DW	04b09H
	DB	0b9H
	DB	099H
	DB	0b4H
	DB	04dH
	DB	073H
	DB	0f0H
	DB	09bH
	DB	024H
CONST	ENDS
;	COMDAT _GUID_696442be_a72e_4059_bc79_5b5c98040fad
CONST	SEGMENT
_GUID_696442be_a72e_4059_bc79_5b5c98040fad DD 0696442beH
	DW	0a72eH
	DW	04059H
	DB	0bcH
	DB	079H
	DB	05bH
	DB	05cH
	DB	098H
	DB	04H
	DB	0fH
	DB	0adH
CONST	ENDS
;	COMDAT _GUID_8efb471d_616c_4f49_90f7_127bb763fa51
CONST	SEGMENT
_GUID_8efb471d_616c_4f49_90f7_127bb763fa51 DD 08efb471dH
	DW	0616cH
	DW	04f49H
	DB	090H
	DB	0f7H
	DB	012H
	DB	07bH
	DB	0b7H
	DB	063H
	DB	0faH
	DB	051H
CONST	ENDS
;	COMDAT _GUID_0ec870a6_5d7e_4c22_8cfc_5baae07616ed
CONST	SEGMENT
_GUID_0ec870a6_5d7e_4c22_8cfc_5baae07616ed DD 0ec870a6H
	DW	05d7eH
	DW	04c22H
	DB	08cH
	DB	0fcH
	DB	05bH
	DB	0aaH
	DB	0e0H
	DB	076H
	DB	016H
	DB	0edH
CONST	ENDS
;	COMDAT _GUID_2411e7e1_12ac_4ccf_bd14_9798e8534dc0
CONST	SEGMENT
_GUID_2411e7e1_12ac_4ccf_bd14_9798e8534dc0 DD 02411e7e1H
	DW	012acH
	DW	04ccfH
	DB	0bdH
	DB	014H
	DB	097H
	DB	098H
	DB	0e8H
	DB	053H
	DB	04dH
	DB	0c0H
CONST	ENDS
;	COMDAT _GUID_1bc6ea02_ef36_464f_bf0c_21ca39e5168a
CONST	SEGMENT
_GUID_1bc6ea02_ef36_464f_bf0c_21ca39e5168a DD 01bc6ea02H
	DW	0ef36H
	DW	0464fH
	DB	0bfH
	DB	0cH
	DB	021H
	DB	0caH
	DB	039H
	DB	0e5H
	DB	016H
	DB	08aH
CONST	ENDS
;	COMDAT _GUID_344488b7_6846_474b_b989_f027448245e0
CONST	SEGMENT
_GUID_344488b7_6846_474b_b989_f027448245e0 DD 0344488b7H
	DW	06846H
	DW	0474bH
	DB	0b9H
	DB	089H
	DB	0f0H
	DB	027H
	DB	044H
	DB	082H
	DB	045H
	DB	0e0H
CONST	ENDS
;	COMDAT _GUID_189819f1_1db6_4b57_be54_1821339b85f7
CONST	SEGMENT
_GUID_189819f1_1db6_4b57_be54_1821339b85f7 DD 0189819f1H
	DW	01db6H
	DW	04b57H
	DB	0beH
	DB	054H
	DB	018H
	DB	021H
	DB	033H
	DB	09bH
	DB	085H
	DB	0f7H
CONST	ENDS
;	COMDAT _GUID_29038f61_3839_4626_91fd_086879011a05
CONST	SEGMENT
_GUID_29038f61_3839_4626_91fd_086879011a05 DD 029038f61H
	DW	03839H
	DW	04626H
	DB	091H
	DB	0fdH
	DB	08H
	DB	068H
	DB	079H
	DB	01H
	DB	01aH
	DB	05H
CONST	ENDS
;	COMDAT _GUID_c1b6694f_ff09_44a9_b03c_77900a0a1d17
CONST	SEGMENT
_GUID_c1b6694f_ff09_44a9_b03c_77900a0a1d17 DD 0c1b6694fH
	DW	0ff09H
	DW	044a9H
	DB	0b0H
	DB	03cH
	DB	077H
	DB	090H
	DB	0aH
	DB	0aH
	DB	01dH
	DB	017H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Vector4@@QEAA@MMMM@Z DD 011b01H
	DD	0221bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??XVector3@@QEAAXAEAT0@@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Vector3@@QEAA@MMM@Z DD 011b01H
	DD	0221bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Vector3@@QEAA@M@Z DD 010f01H
	DD	0220fH
xdata	ENDS
xdata	SEGMENT
$unwind$WinMain DD 032e19H
	DD	060011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck
	DD	02f0H
$unwind$??G@YA?ATVector3@@T0@0@Z DD 011301H
	DD	08213H
$unwind$??G@YA?ATVector3@@T0@@Z DD 010e01H
	DD	0a20eH
$unwind$?length@@YAMTVector3@@@Z DD 010901H
	DD	08209H
$unwind$?normalOf@@YA?ATVector3@@T1@@Z DD 010e01H
	DD	0820eH
$unwind$?cross@@YA?ATVector3@@T1@0@Z DD 021601H
	DD	01d0116H
$unwind$?lookAt@@YA?ATMatrix4@@TVector3@@00@Z DD 042f19H
	DD	043011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0200H
$unwind$?getD3D12HardwareAdapter@@YAXPEAUIDXGIFactory1@@PEAPEAUIDXGIAdapter1@@@Z DD 022319H
	DD	05f0111H
	DD	imagerel __GSHandlerCheck
	DD	02e0H
$unwind$?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z DD 011701H
	DD	06217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?HRESULT_FROM_WIN32@@YAJK@Z DD 010801H
	DD	02208H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 011801H
	DD	06218H
xdata	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UID3D12Fence@@@@YAPEAPEAXPEAPEAUID3D12Fence@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UID3D12Fence@@@@YAPEAPEAXPEAPEAUID3D12Fence@@@Z PROC ; IID_PPV_ARGS_Helper<ID3D12Fence>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UID3D12Fence@@@@YAPEAPEAXPEAPEAUID3D12Fence@@@Z ENDP ; IID_PPV_ARGS_Helper<ID3D12Fence>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UID3D12GraphicsCommandList@@@@YAPEAPEAXPEAPEAUID3D12GraphicsCommandList@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UID3D12GraphicsCommandList@@@@YAPEAPEAXPEAPEAUID3D12GraphicsCommandList@@@Z PROC ; IID_PPV_ARGS_Helper<ID3D12GraphicsCommandList>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UID3D12GraphicsCommandList@@@@YAPEAPEAXPEAPEAUID3D12GraphicsCommandList@@@Z ENDP ; IID_PPV_ARGS_Helper<ID3D12GraphicsCommandList>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UID3D12CommandAllocator@@@@YAPEAPEAXPEAPEAUID3D12CommandAllocator@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UID3D12CommandAllocator@@@@YAPEAPEAXPEAPEAUID3D12CommandAllocator@@@Z PROC ; IID_PPV_ARGS_Helper<ID3D12CommandAllocator>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UID3D12CommandAllocator@@@@YAPEAPEAXPEAPEAUID3D12CommandAllocator@@@Z ENDP ; IID_PPV_ARGS_Helper<ID3D12CommandAllocator>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UID3D12Resource@@@@YAPEAPEAXPEAPEAUID3D12Resource@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UID3D12Resource@@@@YAPEAPEAXPEAPEAUID3D12Resource@@@Z PROC ; IID_PPV_ARGS_Helper<ID3D12Resource>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UID3D12Resource@@@@YAPEAPEAXPEAPEAUID3D12Resource@@@Z ENDP ; IID_PPV_ARGS_Helper<ID3D12Resource>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UID3D12DescriptorHeap@@@@YAPEAPEAXPEAPEAUID3D12DescriptorHeap@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UID3D12DescriptorHeap@@@@YAPEAPEAXPEAPEAUID3D12DescriptorHeap@@@Z PROC ; IID_PPV_ARGS_Helper<ID3D12DescriptorHeap>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UID3D12DescriptorHeap@@@@YAPEAPEAXPEAPEAUID3D12DescriptorHeap@@@Z ENDP ; IID_PPV_ARGS_Helper<ID3D12DescriptorHeap>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UID3D12CommandQueue@@@@YAPEAPEAXPEAPEAUID3D12CommandQueue@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UID3D12CommandQueue@@@@YAPEAPEAXPEAPEAUID3D12CommandQueue@@@Z PROC ; IID_PPV_ARGS_Helper<ID3D12CommandQueue>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UID3D12CommandQueue@@@@YAPEAPEAXPEAPEAUID3D12CommandQueue@@@Z ENDP ; IID_PPV_ARGS_Helper<ID3D12CommandQueue>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UID3D12Device@@@@YAPEAPEAXPEAPEAUID3D12Device@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UID3D12Device@@@@YAPEAPEAXPEAPEAUID3D12Device@@@Z PROC ; IID_PPV_ARGS_Helper<ID3D12Device>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UID3D12Device@@@@YAPEAPEAXPEAPEAUID3D12Device@@@Z ENDP ; IID_PPV_ARGS_Helper<ID3D12Device>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UIDXGIAdapter@@@@YAPEAPEAXPEAPEAUIDXGIAdapter@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UIDXGIAdapter@@@@YAPEAPEAXPEAPEAUIDXGIAdapter@@@Z PROC ; IID_PPV_ARGS_Helper<IDXGIAdapter>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UIDXGIAdapter@@@@YAPEAPEAXPEAPEAUIDXGIAdapter@@@Z ENDP ; IID_PPV_ARGS_Helper<IDXGIAdapter>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UIDXGIFactory4@@@@YAPEAPEAXPEAPEAUIDXGIFactory4@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UIDXGIFactory4@@@@YAPEAPEAXPEAPEAUIDXGIFactory4@@@Z PROC ; IID_PPV_ARGS_Helper<IDXGIFactory4>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UIDXGIFactory4@@@@YAPEAPEAXPEAPEAUIDXGIFactory4@@@Z ENDP ; IID_PPV_ARGS_Helper<IDXGIFactory4>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UID3D12Debug@@@@YAPEAPEAXPEAPEAUID3D12Debug@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UID3D12Debug@@@@YAPEAPEAXPEAPEAUID3D12Debug@@@Z PROC ; IID_PPV_ARGS_Helper<ID3D12Debug>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UID3D12Debug@@@@YAPEAPEAXPEAPEAUID3D12Debug@@@Z ENDP ; IID_PPV_ARGS_Helper<ID3D12Debug>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv64 = 32
hWnd$ = 64
message$ = 72
wParam$ = 80
lParam$ = 88
?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z PROC		; WindowProc
; File C:\Users\Dave\Desktop\code\dx12_scratch\dx12_scratch.cpp
; Line 51
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 52
	mov	eax, DWORD PTR message$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 16
	je	SHORT $LN4@WindowProc
	cmp	DWORD PTR tv64[rsp], 18
	je	SHORT $LN4@WindowProc
	jmp	SHORT $LN2@WindowProc
$LN4@WindowProc:
; Line 55
	xor	ecx, ecx
	call	exit
$LN2@WindowProc:
; Line 58
	mov	r9, QWORD PTR lParam$[rsp]
	mov	r8, QWORD PTR wParam$[rsp]
	mov	edx, DWORD PTR message$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_DefWindowProcA
$LN5@WindowProc:
; Line 59
	add	rsp, 56					; 00000038H
	ret	0
?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z ENDP		; WindowProc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UIDXGIAdapter1@@@@YAPEAPEAXPEAPEAUIDXGIAdapter1@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UIDXGIAdapter1@@@@YAPEAPEAXPEAPEAUIDXGIAdapter1@@@Z PROC ; IID_PPV_ARGS_Helper<IDXGIAdapter1>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UIDXGIAdapter1@@@@YAPEAPEAXPEAPEAUIDXGIAdapter1@@@Z ENDP ; IID_PPV_ARGS_Helper<IDXGIAdapter1>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$IID_PPV_ARGS_Helper@UIDXGIFactory6@@@@YAPEAPEAXPEAPEAUIDXGIFactory6@@@Z
_TEXT	SEGMENT
pp$ = 8
??$IID_PPV_ARGS_Helper@UIDXGIFactory6@@@@YAPEAPEAXPEAPEAUIDXGIFactory6@@@Z PROC ; IID_PPV_ARGS_Helper<IDXGIFactory6>, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\um\combaseapi.h
; Line 354
	mov	QWORD PTR [rsp+8], rcx
; Line 357
	mov	rax, QWORD PTR pp$[rsp]
; Line 358
	ret	0
??$IID_PPV_ARGS_Helper@UIDXGIFactory6@@@@YAPEAPEAXPEAPEAUIDXGIFactory6@@@Z ENDP ; IID_PPV_ARGS_Helper<IDXGIFactory6>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
adapter$ = 48
adapterIndex$1 = 56
adapterIndex$2 = 60
factory6$ = 64
tv69 = 72
tv164 = 80
desc$3 = 96
desc$4 = 416
__$ArrayPad$ = 736
pFactory$ = 768
ppAdapter$ = 776
?getD3D12HardwareAdapter@@YAXPEAUIDXGIFactory1@@PEAPEAUIDXGIAdapter1@@@Z PROC ; getD3D12HardwareAdapter
; File C:\Users\Dave\Desktop\code\dx12_scratch\dx12_scratch.cpp
; Line 16
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 760				; 000002f8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 17
	mov	rax, QWORD PTR ppAdapter$[rsp]
	mov	QWORD PTR [rax], 0
; Line 20
	lea	rcx, QWORD PTR factory6$[rsp]
	call	??$IID_PPV_ARGS_Helper@UIDXGIFactory6@@@@YAPEAPEAXPEAPEAUIDXGIFactory6@@@Z ; IID_PPV_ARGS_Helper<IDXGIFactory6>
	mov	rcx, QWORD PTR pFactory$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv69[rsp], rcx
	mov	r8, rax
	lea	rdx, OFFSET FLAT:_GUID_c1b6694f_ff09_44a9_b03c_77900a0a1d17
	mov	rcx, QWORD PTR pFactory$[rsp]
	mov	rax, QWORD PTR tv69[rsp]
	call	QWORD PTR [rax]
	test	eax, eax
	jl	$LN8@getD3D12Ha
; Line 21
	mov	DWORD PTR adapterIndex$1[rsp], 0
	jmp	SHORT $LN4@getD3D12Ha
$LN2@getD3D12Ha:
; Line 23
	mov	eax, DWORD PTR adapterIndex$1[rsp]
	inc	eax
	mov	DWORD PTR adapterIndex$1[rsp], eax
$LN4@getD3D12Ha:
; Line 22
	lea	rcx, QWORD PTR adapter$[rsp]
	call	??$IID_PPV_ARGS_Helper@UIDXGIAdapter1@@@@YAPEAPEAXPEAPEAUIDXGIAdapter1@@@Z ; IID_PPV_ARGS_Helper<IDXGIAdapter1>
	mov	rcx, QWORD PTR factory6$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv164[rsp], rcx
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:_GUID_29038f61_3839_4626_91fd_086879011a05
	mov	r8d, 2
	mov	edx, DWORD PTR adapterIndex$1[rsp]
	mov	rcx, QWORD PTR factory6$[rsp]
	mov	rax, QWORD PTR tv164[rsp]
	call	QWORD PTR [rax+232]
	cmp	eax, -2005270526			; ffffffff887a0002H
	je	SHORT $LN3@getD3D12Ha
; Line 25
	mov	rax, QWORD PTR adapter$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR desc$3[rsp]
	mov	rcx, QWORD PTR adapter$[rsp]
	call	QWORD PTR [rax+80]
; Line 26
	mov	eax, DWORD PTR desc$3[rsp+304]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN10@getD3D12Ha
; Line 27
	jmp	SHORT $LN2@getD3D12Ha
$LN10@getD3D12Ha:
; Line 30
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:_GUID_189819f1_1db6_4b57_be54_1821339b85f7
	mov	edx, 45056				; 0000b000H
	mov	rcx, QWORD PTR adapter$[rsp]
	call	D3D12CreateDevice
	test	eax, eax
	jl	SHORT $LN11@getD3D12Ha
; Line 31
	jmp	SHORT $LN3@getD3D12Ha
$LN11@getD3D12Ha:
; Line 33
	jmp	$LN2@getD3D12Ha
$LN3@getD3D12Ha:
; Line 34
	jmp	$LN9@getD3D12Ha
$LN8@getD3D12Ha:
; Line 35
	mov	DWORD PTR adapterIndex$2[rsp], 0
	jmp	SHORT $LN7@getD3D12Ha
$LN5@getD3D12Ha:
	mov	eax, DWORD PTR adapterIndex$2[rsp]
	inc	eax
	mov	DWORD PTR adapterIndex$2[rsp], eax
$LN7@getD3D12Ha:
	mov	rax, QWORD PTR pFactory$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR adapter$[rsp]
	mov	edx, DWORD PTR adapterIndex$2[rsp]
	mov	rcx, QWORD PTR pFactory$[rsp]
	call	QWORD PTR [rax+96]
	cmp	eax, -2005270526			; ffffffff887a0002H
	je	SHORT $LN6@getD3D12Ha
; Line 37
	mov	rax, QWORD PTR adapter$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR desc$4[rsp]
	mov	rcx, QWORD PTR adapter$[rsp]
	call	QWORD PTR [rax+80]
; Line 38
	mov	eax, DWORD PTR desc$4[rsp+304]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN12@getD3D12Ha
; Line 39
	jmp	SHORT $LN5@getD3D12Ha
$LN12@getD3D12Ha:
; Line 42
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:_GUID_189819f1_1db6_4b57_be54_1821339b85f7
	mov	edx, 45056				; 0000b000H
	mov	rcx, QWORD PTR adapter$[rsp]
	call	D3D12CreateDevice
	test	eax, eax
	jl	SHORT $LN13@getD3D12Ha
; Line 43
	jmp	SHORT $LN6@getD3D12Ha
$LN13@getD3D12Ha:
; Line 45
	jmp	SHORT $LN5@getD3D12Ha
$LN6@getD3D12Ha:
$LN9@getD3D12Ha:
; Line 48
	mov	rax, QWORD PTR ppAdapter$[rsp]
	mov	rcx, QWORD PTR adapter$[rsp]
	mov	QWORD PTR [rax], rcx
; Line 49
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 760				; 000002f8H
	ret	0
?getD3D12HardwareAdapter@@YAXPEAUIDXGIFactory1@@PEAPEAUIDXGIAdapter1@@@Z ENDP ; getD3D12HardwareAdapter
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
$T4 = 80
$T5 = 96
$T6 = 112
$T7 = 128
$T8 = 144
$T9 = 160
$T10 = 176
$T11 = 192
$T12 = 208
$T13 = 224
$T14 = 240
$T15 = 256
$T16 = 272
$T17 = 288
$T18 = 304
forward$ = 320
right$ = 336
mat$ = 352
$T19 = 416
$T20 = 432
$T21 = 448
$T22 = 464
$T23 = 480
$T24 = 496
__$ArrayPad$ = 512
__$ReturnUdt$ = 560
position$ = 568
target$ = 576
up$ = 584
?lookAt@@YA?ATMatrix4@@TVector3@@00@Z PROC		; lookAt
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 815
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 536				; 00000218H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 816
	mov	rax, QWORD PTR position$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR target$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T2[rsp], xmm0
	lea	r8, QWORD PTR $T1[rsp]
	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR $T19[rsp]
	call	??G@YA?ATVector3@@T0@0@Z		; operator-
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T3[rsp], xmm0
	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR forward$[rsp]
	call	?normalOf@@YA?ATVector3@@T1@@Z		; normalOf
; Line 817
	mov	rax, QWORD PTR up$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T4[rsp], xmm0
	movaps	xmm0, XMMWORD PTR forward$[rsp]
	movdqa	XMMWORD PTR $T5[rsp], xmm0
	lea	r8, QWORD PTR $T4[rsp]
	lea	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR $T20[rsp]
	call	?cross@@YA?ATVector3@@T1@0@Z		; cross
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T6[rsp], xmm0
	lea	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR right$[rsp]
	call	?normalOf@@YA?ATVector3@@T1@@Z		; normalOf
; Line 818
	movaps	xmm0, XMMWORD PTR forward$[rsp]
	movdqa	XMMWORD PTR $T7[rsp], xmm0
	movaps	xmm0, XMMWORD PTR right$[rsp]
	movdqa	XMMWORD PTR $T8[rsp], xmm0
	lea	r8, QWORD PTR $T7[rsp]
	lea	rdx, QWORD PTR $T8[rsp]
	lea	rcx, QWORD PTR $T21[rsp]
	call	?cross@@YA?ATVector3@@T1@0@Z		; cross
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T9[rsp], xmm0
	lea	rdx, QWORD PTR $T9[rsp]
	lea	rcx, QWORD PTR $T22[rsp]
	call	?normalOf@@YA?ATVector3@@T1@@Z		; normalOf
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T10[rsp], xmm0
	lea	rdx, QWORD PTR $T10[rsp]
	mov	rcx, QWORD PTR up$[rsp]
	call	??4Vector3@@QEAAXT0@@Z			; Vector3::operator=
; Line 819
	lea	rcx, QWORD PTR mat$[rsp]
	call	??0Matrix4@@QEAA@XZ			; Matrix4::Matrix4
; Line 820
	mov	eax, 16
	imul	rax, rax, 0
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 0
	movss	xmm0, DWORD PTR right$[rsp]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 821
	mov	eax, 16
	imul	rax, rax, 0
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR up$[rsp]
	movss	xmm0, DWORD PTR [rdx]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 822
	movss	xmm0, DWORD PTR forward$[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 16
	imul	rax, rax, 0
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 2
	movss	DWORD PTR [rax+rcx], xmm0
; Line 823
	mov	eax, 16
	imul	rax, rax, 0
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 3
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+rcx], xmm0
; Line 824
	mov	eax, 16
	imul	rax, rax, 1
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 0
	movss	xmm0, DWORD PTR right$[rsp+4]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 825
	mov	eax, 16
	imul	rax, rax, 1
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR up$[rsp]
	movss	xmm0, DWORD PTR [rdx+4]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 826
	movss	xmm0, DWORD PTR forward$[rsp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	eax, 16
	imul	rax, rax, 1
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 2
	movss	DWORD PTR [rax+rcx], xmm0
; Line 827
	mov	eax, 16
	imul	rax, rax, 1
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 3
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+rcx], xmm0
; Line 828
	mov	eax, 16
	imul	rax, rax, 2
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 0
	movss	xmm0, DWORD PTR right$[rsp+8]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 829
	mov	eax, 16
	imul	rax, rax, 2
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR up$[rsp]
	movss	xmm0, DWORD PTR [rdx+8]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 830
	mov	eax, 16
	imul	rax, rax, 2
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 2
	movss	xmm0, DWORD PTR forward$[rsp+8]
	movss	DWORD PTR [rax+rcx], xmm0
; Line 831
	mov	eax, 16
	imul	rax, rax, 2
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 3
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+rcx], xmm0
; Line 832
	mov	rax, QWORD PTR position$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T12[rsp], xmm0
	movaps	xmm0, XMMWORD PTR right$[rsp]
	movdqa	XMMWORD PTR $T11[rsp], xmm0
	lea	rdx, QWORD PTR $T11[rsp]
	lea	rcx, QWORD PTR $T23[rsp]
	call	??G@YA?ATVector3@@T0@@Z			; operator-
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T13[rsp], xmm0
	lea	rdx, QWORD PTR $T12[rsp]
	lea	rcx, QWORD PTR $T13[rsp]
	call	?dot@@YAMTVector3@@0@Z			; dot
	mov	eax, 16
	imul	rax, rax, 3
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 0
	movss	DWORD PTR [rax+rcx], xmm0
; Line 833
	mov	rax, QWORD PTR position$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T15[rsp], xmm0
	mov	rax, QWORD PTR up$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T14[rsp], xmm0
	lea	rdx, QWORD PTR $T14[rsp]
	lea	rcx, QWORD PTR $T24[rsp]
	call	??G@YA?ATVector3@@T0@@Z			; operator-
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T16[rsp], xmm0
	lea	rdx, QWORD PTR $T15[rsp]
	lea	rcx, QWORD PTR $T16[rsp]
	call	?dot@@YAMTVector3@@0@Z			; dot
	mov	eax, 16
	imul	rax, rax, 3
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 1
	movss	DWORD PTR [rax+rcx], xmm0
; Line 834
	mov	rax, QWORD PTR position$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T17[rsp], xmm0
	movaps	xmm0, XMMWORD PTR forward$[rsp]
	movdqa	XMMWORD PTR $T18[rsp], xmm0
	lea	rdx, QWORD PTR $T17[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	?dot@@YAMTVector3@@0@Z			; dot
	mov	eax, 16
	imul	rax, rax, 3
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 2
	movss	DWORD PTR [rax+rcx], xmm0
; Line 835
	mov	eax, 16
	imul	rax, rax, 3
	lea	rax, QWORD PTR mat$[rsp+rax]
	mov	ecx, 4
	imul	rcx, rcx, 3
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+rcx], xmm0
; Line 836
	lea	rax, QWORD PTR mat$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 64					; 00000040H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 837
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 536				; 00000218H
	pop	rdi
	pop	rsi
	ret	0
?lookAt@@YA?ATMatrix4@@TVector3@@00@Z ENDP		; lookAt
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tmp0$ = 32
tmp2$ = 48
$T1 = 64
$T2 = 80
$T3 = 96
tmp1$ = 112
$T4 = 128
$T5 = 144
tmp3$ = 160
tmp4$ = 176
$T6 = 192
$T7 = 208
__$ReturnUdt$ = 240
v1$ = 248
v2$ = 256
?cross@@YA?ATVector3@@T1@0@Z PROC			; cross
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 480
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 232				; 000000e8H
; Line 481
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v1$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	shufps	xmm0, XMMWORD PTR [rcx], 201		; 000000c9H
	movaps	XMMWORD PTR $T1[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movaps	XMMWORD PTR tmp0$[rsp], xmm0
; Line 482
	mov	rax, QWORD PTR v2$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	shufps	xmm0, XMMWORD PTR [rcx], 210		; 000000d2H
	movaps	XMMWORD PTR $T2[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[rsp]
	movaps	XMMWORD PTR tmp1$[rsp], xmm0
; Line 483
	mov	rax, QWORD PTR v2$[rsp]
	movaps	xmm0, XMMWORD PTR tmp0$[rsp]
	mulps	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T3[rsp]
	movaps	XMMWORD PTR tmp2$[rsp], xmm0
; Line 484
	movaps	xmm0, XMMWORD PTR tmp0$[rsp]
	mulps	xmm0, XMMWORD PTR tmp1$[rsp]
	movaps	XMMWORD PTR $T4[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T4[rsp]
	movaps	XMMWORD PTR tmp3$[rsp], xmm0
; Line 485
	movaps	xmm0, XMMWORD PTR tmp2$[rsp]
	shufps	xmm0, XMMWORD PTR tmp2$[rsp], 201	; 000000c9H
	movaps	XMMWORD PTR $T5[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T5[rsp]
	movaps	XMMWORD PTR tmp4$[rsp], xmm0
; Line 486
	movaps	xmm0, XMMWORD PTR tmp3$[rsp]
	subps	xmm0, XMMWORD PTR tmp4$[rsp]
	movaps	XMMWORD PTR $T6[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[rsp]
	movaps	XMMWORD PTR $T7[rsp], xmm0
	lea	rdx, QWORD PTR $T7[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@T__m128@@@Z		; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 487
	add	rsp, 232				; 000000e8H
	ret	0
?cross@@YA?ATVector3@@T1@0@Z ENDP			; cross
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
v1$ = 8
v2$ = 16
?dot@@YAMTVector3@@0@Z PROC				; dot
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 462
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
; Line 463
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1
; Line 464
	ret	0
?dot@@YAMTVector3@@0@Z ENDP				; dot
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
len$ = 32
tv71 = 36
tv75 = 40
tv79 = 44
$T1 = 48
__$ReturnUdt$ = 80
v$ = 88
?normalOf@@YA?ATVector3@@T1@@Z PROC			; normalOf
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 427
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
; Line 428
	mov	rax, QWORD PTR v$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T1[rsp], xmm0
	lea	rcx, QWORD PTR $T1[rsp]
	call	?length@@YAMTVector3@@@Z		; length
	movss	DWORD PTR len$[rsp], xmm0
; Line 429
	movss	xmm0, DWORD PTR len$[rsp]
	ucomiss	xmm0, DWORD PTR __real@00000000
	jp	SHORT $LN5@normalOf
	je	$LN2@normalOf
$LN5@normalOf:
; Line 430
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR len$[rsp]
	movss	DWORD PTR tv71[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR tv71[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR len$[rsp]
	movss	DWORD PTR tv75[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR tv75[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR [rax]
	divss	xmm0, DWORD PTR len$[rsp]
	movss	DWORD PTR tv79[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movss	xmm0, DWORD PTR tv79[rsp]
	movss	DWORD PTR [rax], xmm0
	movss	xmm3, DWORD PTR tv71[rsp]
	movss	xmm2, DWORD PTR tv75[rsp]
	movss	xmm1, DWORD PTR tv79[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@MMM@Z			; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@normalOf
; Line 431
	jmp	SHORT $LN3@normalOf
$LN2@normalOf:
; Line 432
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@M@Z			; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN3@normalOf:
$LN1@normalOf:
; Line 434
	add	rsp, 72					; 00000048H
	ret	0
?normalOf@@YA?ATVector3@@T1@@Z ENDP			; normalOf
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
v$ = 80
?length@@YAMTVector3@@@Z PROC				; length
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 352
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
; Line 353
	mov	rdx, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	call	??XVector3@@QEAAXAEAT0@@Z		; Vector3::operator*=
; Line 354
	mov	rax, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	haddps	xmm0, XMMWORD PTR [rcx]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 355
	mov	rax, QWORD PTR v$[rsp]
	mov	rcx, QWORD PTR v$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	haddps	xmm0, XMMWORD PTR [rcx]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movaps	xmm0, XMMWORD PTR $T2[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 356
	mov	rax, QWORD PTR v$[rsp]
	cvtss2sd xmm0, DWORD PTR [rax]
	call	sqrt
	cvtsd2ss xmm0, xmm0
; Line 358
	add	rsp, 72					; 00000048H
	ret	0
?length@@YAMTVector3@@@Z ENDP				; length
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
__$ReturnUdt$ = 96
v$ = 104
??G@YA?ATVector3@@T0@@Z PROC				; operator-
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 340
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
; Line 341
	movaps	xmm0, XMMWORD PTR __xmm@00000000000000000000000000000000
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR v$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	subps	xmm0, XMMWORD PTR [rax]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[rsp]
	movaps	XMMWORD PTR $T3[rsp], xmm0
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@T__m128@@@Z		; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 342
	add	rsp, 88					; 00000058H
	ret	0
??G@YA?ATVector3@@T0@@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
__$ReturnUdt$ = 80
v1$ = 88
v2$ = 96
??G@YA?ATVector3@@T0@0@Z PROC				; operator-
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 259
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
; Line 260
	mov	rax, QWORD PTR v1$[rsp]
	mov	rcx, QWORD PTR v2$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	subps	xmm0, XMMWORD PTR [rcx]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movaps	XMMWORD PTR $T2[rsp], xmm0
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Vector3@@QEAA@T__m128@@@Z		; Vector3::Vector3
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
; Line 261
	add	rsp, 72					; 00000048H
	ret	0
??G@YA?ATVector3@@T0@0@Z ENDP				; operator-
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Matrix4@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Matrix4@@QEAA@XZ PROC				; Matrix4::Matrix4, COMDAT
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 180
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Matrix4@@QEAA@XZ ENDP				; Matrix4::Matrix4
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector4@@QEAA@MMMM@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
x$ = 40
y$ = 48
z$ = 56
w$ = 64
??0Vector4@@QEAA@MMMM@Z PROC				; Vector4::Vector4, COMDAT
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 111
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 112
	movss	xmm0, DWORD PTR w$[rsp]
	movss	xmm1, DWORD PTR z$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm3, DWORD PTR x$[rsp]
	unpcklps xmm1, xmm0
	unpcklps xmm3, xmm2
	movaps	xmm0, xmm3
	movlhps	xmm0, xmm1
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 113
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 24
	ret	0
??0Vector4@@QEAA@MMMM@Z ENDP				; Vector4::Vector4
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??XVector3@@QEAAXAEAT0@@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
a$ = 40
??XVector3@@QEAAXAEAT0@@Z PROC				; Vector3::operator*=, COMDAT
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 68
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 69
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movups	xmm0, XMMWORD PTR [rax]
	mulps	xmm0, XMMWORD PTR [rcx]
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 70
	add	rsp, 24
	ret	0
??XVector3@@QEAAXAEAT0@@Z ENDP				; Vector3::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??4Vector3@@QEAAXT0@@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
??4Vector3@@QEAAXT0@@Z PROC				; Vector3::operator=, COMDAT
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 64
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
; Line 65
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movups	xmm0, XMMWORD PTR [rcx]
	movups	XMMWORD PTR [rax], xmm0
; Line 66
	ret	0
??4Vector3@@QEAAXT0@@Z ENDP				; Vector3::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector3@@QEAA@MMM@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
x$ = 40
y$ = 48
z$ = 56
??0Vector3@@QEAA@MMM@Z PROC				; Vector3::Vector3, COMDAT
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 60
$LN3:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 61
	xorps	xmm0, xmm0
	movss	xmm1, DWORD PTR z$[rsp]
	movss	xmm2, DWORD PTR y$[rsp]
	movss	xmm3, DWORD PTR x$[rsp]
	unpcklps xmm1, xmm0
	unpcklps xmm3, xmm2
	movaps	xmm0, xmm3
	movlhps	xmm0, xmm1
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 62
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 24
	ret	0
??0Vector3@@QEAA@MMM@Z ENDP				; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector3@@QEAA@M@Z
_TEXT	SEGMENT
$T1 = 0
this$ = 32
a$ = 40
??0Vector3@@QEAA@M@Z PROC				; Vector3::Vector3, COMDAT
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 57
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 58
	xorps	xmm0, xmm0
	movss	xmm1, DWORD PTR a$[rsp]
	movss	xmm2, DWORD PTR a$[rsp]
	movss	xmm3, DWORD PTR a$[rsp]
	unpcklps xmm1, xmm0
	unpcklps xmm3, xmm2
	movaps	xmm0, xmm3
	movlhps	xmm0, xmm1
	movaps	XMMWORD PTR $T1[rsp], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movaps	xmm0, XMMWORD PTR $T1[rsp]
	movups	XMMWORD PTR [rax], xmm0
; Line 59
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 24
	ret	0
??0Vector3@@QEAA@M@Z ENDP				; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Vector3@@QEAA@T__m128@@@Z
_TEXT	SEGMENT
this$ = 8
a$ = 16
??0Vector3@@QEAA@T__m128@@@Z PROC			; Vector3::Vector3, COMDAT
; File C:\Users\Dave\Desktop\code\dx12_scratch\mathematics.h
; Line 56
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movups	xmm0, XMMWORD PTR [rcx]
	movups	XMMWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Vector3@@QEAA@T__m128@@@Z ENDP			; Vector3::Vector3
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
d3d12FrameIndex$ = 96
d3d12CommandList$ = 104
d3d12UseWarpDevice$ = 112
running$ = 113
n$1 = 116
d3d12Device$ = 120
rtvHandle$ = 128
d3d12SwapChain$ = 136
d3d12Fence$ = 144
dxgiFactoryFlags$ = 152
d3d12FrameCount$ = 156
factory$ = 160
d3d12CommandQueue$ = 168
d3d12RTVDescriptorSize$ = 176
d3d12FenceEvent$ = 184
d3d12FenceValues$ = 192
d3d12RTVHeap$ = 208
monitorWidth$ = 216
tv79 = 220
monitorHeight$ = 224
tv82 = 228
windowY$ = 232
windowX$ = 236
windowHandle$ = 240
debugController$ = 248
currentFenceValue$2 = 256
resBarrier$3 = 264
d3d12CommandAllocators$ = 296
tv714 = 312
swapChain$ = 320
tv710 = 328
tv707 = 336
tv706 = 344
tv705 = 352
tv704 = 360
tv702 = 368
tv699 = 376
ppCommandList$4 = 384
tv685 = 392
tv684 = 400
tv683 = 408
tv715 = 416
warpAdapter$5 = 424
hardwareAdapter$6 = 432
d3d12RenderTargets$ = 440
$T7 = 456
windowClass$ = 464
msg$8 = 544
windowRect$ = 592
rtvHeapDesc$ = 608
d3d12ScissorRect$ = 624
d3d12Viewport$ = 640
queueDesc$ = 664
swapChainDesc$ = 680
cc$9 = 736
__$ArrayPad$ = 752
hInstance$ = 784
hPrevInstance$ = 792
lpCmdLine$ = 800
nCmdShow$ = 808
WinMain	PROC
; File C:\Users\Dave\Desktop\code\dx12_scratch\dx12_scratch.cpp
; Line 61
$LN38:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 768				; 00000300H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 63
	lea	rax, QWORD PTR windowClass$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 80					; 00000050H
	rep stosb
; Line 64
	mov	DWORD PTR windowClass$[rsp], 80		; 00000050H
; Line 65
	mov	DWORD PTR windowClass$[rsp+4], 3
; Line 66
	lea	rax, OFFSET FLAT:?WindowProc@@YA_JPEAUHWND__@@I_K_J@Z ; WindowProc
	mov	QWORD PTR windowClass$[rsp+8], rax
; Line 67
	mov	rax, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR windowClass$[rsp+24], rax
; Line 68
	mov	edx, 32512				; 00007f00H
	xor	ecx, ecx
	call	QWORD PTR __imp_LoadCursorA
	mov	QWORD PTR windowClass$[rsp+40], rax
; Line 69
	lea	rax, OFFSET FLAT:$SG141083
	mov	QWORD PTR windowClass$[rsp+64], rax
; Line 70
	lea	rcx, QWORD PTR windowClass$[rsp]
	call	QWORD PTR __imp_RegisterClassExA
; Line 72
	mov	DWORD PTR windowRect$[rsp], 0
	mov	DWORD PTR windowRect$[rsp+4], 0
	mov	eax, DWORD PTR ?width@@3IA		; width
	mov	DWORD PTR windowRect$[rsp+8], eax
	mov	eax, DWORD PTR ?height@@3IA		; height
	mov	DWORD PTR windowRect$[rsp+12], eax
; Line 73
	xor	r8d, r8d
	mov	edx, 13565952				; 00cf0000H
	lea	rcx, QWORD PTR windowRect$[rsp]
	call	QWORD PTR __imp_AdjustWindowRect
; Line 75
	xor	ecx, ecx
	call	QWORD PTR __imp_GetSystemMetrics
	mov	DWORD PTR monitorWidth$[rsp], eax
; Line 76
	mov	ecx, 1
	call	QWORD PTR __imp_GetSystemMetrics
	mov	DWORD PTR monitorHeight$[rsp], eax
; Line 77
	xor	edx, edx
	mov	eax, DWORD PTR monitorWidth$[rsp]
	mov	ecx, 2
	div	ecx
	mov	DWORD PTR tv79[rsp], eax
	xor	edx, edx
	mov	eax, DWORD PTR ?width@@3IA		; width
	mov	ecx, 2
	div	ecx
	mov	ecx, DWORD PTR tv79[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR windowX$[rsp], eax
; Line 78
	xor	edx, edx
	mov	eax, DWORD PTR monitorHeight$[rsp]
	mov	ecx, 2
	div	ecx
	mov	DWORD PTR tv82[rsp], eax
	xor	edx, edx
	mov	eax, DWORD PTR ?height@@3IA		; height
	mov	ecx, 2
	div	ecx
	mov	ecx, DWORD PTR tv82[rsp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR windowY$[rsp], eax
; Line 80
	mov	eax, DWORD PTR windowRect$[rsp+4]
	mov	ecx, DWORD PTR windowRect$[rsp+12]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR windowRect$[rsp]
	mov	edx, DWORD PTR windowRect$[rsp+8]
	sub	edx, ecx
	mov	ecx, edx
	mov	QWORD PTR [rsp+88], 0
	mov	rdx, QWORD PTR hInstance$[rsp]
	mov	QWORD PTR [rsp+80], rdx
	mov	QWORD PTR [rsp+72], 0
	mov	QWORD PTR [rsp+64], 0
	mov	DWORD PTR [rsp+56], eax
	mov	DWORD PTR [rsp+48], ecx
	mov	eax, DWORD PTR windowY$[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	eax, DWORD PTR windowX$[rsp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, 13565952				; 00cf0000H
	lea	r8, OFFSET FLAT:$SG141084
	mov	rdx, QWORD PTR windowClass$[rsp+64]
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateWindowExA
	mov	QWORD PTR windowHandle$[rsp], rax
; Line 87
	xorps	xmm0, xmm0
	movss	DWORD PTR d3d12Viewport$[rsp], xmm0
; Line 88
	xorps	xmm0, xmm0
	movss	DWORD PTR d3d12Viewport$[rsp+4], xmm0
; Line 89
	mov	eax, DWORD PTR ?width@@3IA		; width
	cvtsi2ss xmm0, rax
	movss	DWORD PTR d3d12Viewport$[rsp+8], xmm0
; Line 90
	mov	eax, DWORD PTR ?height@@3IA		; height
	cvtsi2ss xmm0, rax
	movss	DWORD PTR d3d12Viewport$[rsp+12], xmm0
; Line 91
	xorps	xmm0, xmm0
	movss	DWORD PTR d3d12Viewport$[rsp+16], xmm0
; Line 92
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR d3d12Viewport$[rsp+20], xmm0
; Line 93
	mov	DWORD PTR d3d12ScissorRect$[rsp], 0
; Line 94
	mov	DWORD PTR d3d12ScissorRect$[rsp+4], 0
; Line 95
	mov	eax, DWORD PTR ?width@@3IA		; width
	mov	DWORD PTR d3d12ScissorRect$[rsp+8], eax
; Line 96
	mov	eax, DWORD PTR ?height@@3IA		; height
	mov	DWORD PTR d3d12ScissorRect$[rsp+12], eax
; Line 97
	call	DXGIDeclareAdapterRemovalSupport
	test	eax, eax
	jge	SHORT $LN9@WinMain
	mov	DWORD PTR ds:0, 0
$LN9@WinMain:
; Line 99
	mov	DWORD PTR dxgiFactoryFlags$[rsp], 0
; Line 101
	lea	rcx, QWORD PTR debugController$[rsp]
	call	??$IID_PPV_ARGS_Helper@UID3D12Debug@@@@YAPEAPEAXPEAPEAUID3D12Debug@@@Z ; IID_PPV_ARGS_Helper<ID3D12Debug>
	mov	rdx, rax
	lea	rcx, OFFSET FLAT:_GUID_344488b7_6846_474b_b989_f027448245e0
	call	D3D12GetDebugInterface
	test	eax, eax
	jl	SHORT $LN10@WinMain
; Line 102
	mov	rax, QWORD PTR debugController$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR debugController$[rsp]
	call	QWORD PTR [rax+24]
; Line 103
	mov	eax, DWORD PTR dxgiFactoryFlags$[rsp]
	or	eax, 1
	mov	DWORD PTR dxgiFactoryFlags$[rsp], eax
$LN10@WinMain:
; Line 107
	lea	rcx, QWORD PTR factory$[rsp]
	call	??$IID_PPV_ARGS_Helper@UIDXGIFactory4@@@@YAPEAPEAXPEAPEAUIDXGIFactory4@@@Z ; IID_PPV_ARGS_Helper<IDXGIFactory4>
	mov	r8, rax
	lea	rdx, OFFSET FLAT:_GUID_1bc6ea02_ef36_464f_bf0c_21ca39e5168a
	mov	ecx, DWORD PTR dxgiFactoryFlags$[rsp]
	call	CreateDXGIFactory2
	test	eax, eax
	jge	SHORT $LN11@WinMain
	mov	DWORD PTR ds:0, 0
$LN11@WinMain:
; Line 110
	mov	BYTE PTR d3d12UseWarpDevice$[rsp], 0
; Line 111
	movzx	eax, BYTE PTR d3d12UseWarpDevice$[rsp]
	test	eax, eax
	je	$LN12@WinMain
; Line 113
	lea	rcx, QWORD PTR warpAdapter$5[rsp]
	call	??$IID_PPV_ARGS_Helper@UIDXGIAdapter@@@@YAPEAPEAXPEAPEAUIDXGIAdapter@@@Z ; IID_PPV_ARGS_Helper<IDXGIAdapter>
	mov	rcx, QWORD PTR factory$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv715[rsp], rcx
	mov	r8, rax
	lea	rdx, OFFSET FLAT:_GUID_2411e7e1_12ac_4ccf_bd14_9798e8534dc0
	mov	rcx, QWORD PTR factory$[rsp]
	mov	rax, QWORD PTR tv715[rsp]
	call	QWORD PTR [rax+216]
	test	eax, eax
	jge	SHORT $LN14@WinMain
	mov	DWORD PTR ds:0, 0
$LN14@WinMain:
; Line 115
	lea	rcx, QWORD PTR d3d12Device$[rsp]
	call	??$IID_PPV_ARGS_Helper@UID3D12Device@@@@YAPEAPEAXPEAPEAUID3D12Device@@@Z ; IID_PPV_ARGS_Helper<ID3D12Device>
	mov	r9, rax
	lea	r8, OFFSET FLAT:_GUID_189819f1_1db6_4b57_be54_1821339b85f7
	mov	edx, 45056				; 0000b000H
	mov	rcx, QWORD PTR warpAdapter$5[rsp]
	call	D3D12CreateDevice
	test	eax, eax
	jge	SHORT $LN15@WinMain
	mov	DWORD PTR ds:0, 0
$LN15@WinMain:
; Line 116
	jmp	SHORT $LN13@WinMain
$LN12@WinMain:
; Line 118
	lea	rdx, QWORD PTR hardwareAdapter$6[rsp]
	mov	rcx, QWORD PTR factory$[rsp]
	call	?getD3D12HardwareAdapter@@YAXPEAUIDXGIFactory1@@PEAPEAUIDXGIAdapter1@@@Z ; getD3D12HardwareAdapter
; Line 120
	lea	rcx, QWORD PTR d3d12Device$[rsp]
	call	??$IID_PPV_ARGS_Helper@UID3D12Device@@@@YAPEAPEAXPEAPEAUID3D12Device@@@Z ; IID_PPV_ARGS_Helper<ID3D12Device>
	mov	r9, rax
	lea	r8, OFFSET FLAT:_GUID_189819f1_1db6_4b57_be54_1821339b85f7
	mov	edx, 45056				; 0000b000H
	mov	rcx, QWORD PTR hardwareAdapter$6[rsp]
	call	D3D12CreateDevice
	test	eax, eax
	jge	SHORT $LN16@WinMain
	mov	DWORD PTR ds:0, 0
$LN16@WinMain:
$LN13@WinMain:
; Line 124
	lea	rax, QWORD PTR queueDesc$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 125
	mov	DWORD PTR queueDesc$[rsp+8], 0
; Line 126
	mov	DWORD PTR queueDesc$[rsp], 0
; Line 127
	lea	rcx, QWORD PTR d3d12CommandQueue$[rsp]
	call	??$IID_PPV_ARGS_Helper@UID3D12CommandQueue@@@@YAPEAPEAXPEAPEAUID3D12CommandQueue@@@Z ; IID_PPV_ARGS_Helper<ID3D12CommandQueue>
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv714[rsp], rcx
	mov	r9, rax
	lea	r8, OFFSET FLAT:_GUID_0ec870a6_5d7e_4c22_8cfc_5baae07616ed
	lea	rdx, QWORD PTR queueDesc$[rsp]
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rax, QWORD PTR tv714[rsp]
	call	QWORD PTR [rax+64]
	test	eax, eax
	jge	SHORT $LN17@WinMain
	mov	DWORD PTR ds:0, 0
$LN17@WinMain:
; Line 129
	mov	DWORD PTR d3d12FrameCount$[rsp], 2
; Line 130
	lea	rax, QWORD PTR swapChainDesc$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
; Line 131
	mov	eax, DWORD PTR d3d12FrameCount$[rsp]
	mov	DWORD PTR swapChainDesc$[rsp+28], eax
; Line 132
	mov	eax, DWORD PTR ?width@@3IA		; width
	mov	DWORD PTR swapChainDesc$[rsp], eax
; Line 133
	mov	eax, DWORD PTR ?height@@3IA		; height
	mov	DWORD PTR swapChainDesc$[rsp+4], eax
; Line 134
	mov	DWORD PTR swapChainDesc$[rsp+8], 28
; Line 135
	mov	DWORD PTR swapChainDesc$[rsp+24], 32	; 00000020H
; Line 136
	mov	DWORD PTR swapChainDesc$[rsp+36], 4
; Line 137
	mov	DWORD PTR swapChainDesc$[rsp+16], 1
; Line 140
	mov	rax, QWORD PTR factory$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rcx, QWORD PTR swapChain$[rsp]
	mov	QWORD PTR [rsp+48], rcx
	mov	QWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR swapChainDesc$[rsp]
	mov	r8, QWORD PTR windowHandle$[rsp]
	mov	rdx, QWORD PTR d3d12CommandQueue$[rsp]
	mov	rcx, QWORD PTR factory$[rsp]
	call	QWORD PTR [rax+120]
	test	eax, eax
	jge	SHORT $LN18@WinMain
	mov	DWORD PTR ds:0, 0
$LN18@WinMain:
; Line 141
	mov	rax, QWORD PTR factory$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8d, 2
	mov	rdx, QWORD PTR windowHandle$[rsp]
	mov	rcx, QWORD PTR factory$[rsp]
	call	QWORD PTR [rax+64]
	test	eax, eax
	jge	SHORT $LN19@WinMain
	mov	DWORD PTR ds:0, 0
$LN19@WinMain:
; Line 142
	mov	rax, QWORD PTR swapChain$[rsp]
	mov	QWORD PTR d3d12SwapChain$[rsp], rax
; Line 143
	mov	rax, QWORD PTR d3d12SwapChain$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR d3d12SwapChain$[rsp]
	call	QWORD PTR [rax+288]
	mov	DWORD PTR d3d12FrameIndex$[rsp], eax
; Line 146
	lea	rax, QWORD PTR rtvHeapDesc$[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 147
	mov	eax, DWORD PTR d3d12FrameCount$[rsp]
	mov	DWORD PTR rtvHeapDesc$[rsp+4], eax
; Line 148
	mov	DWORD PTR rtvHeapDesc$[rsp], 2
; Line 149
	mov	DWORD PTR rtvHeapDesc$[rsp+8], 0
; Line 150
	lea	rcx, QWORD PTR d3d12RTVHeap$[rsp]
	call	??$IID_PPV_ARGS_Helper@UID3D12DescriptorHeap@@@@YAPEAPEAXPEAPEAUID3D12DescriptorHeap@@@Z ; IID_PPV_ARGS_Helper<ID3D12DescriptorHeap>
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv710[rsp], rcx
	mov	r9, rax
	lea	r8, OFFSET FLAT:_GUID_8efb471d_616c_4f49_90f7_127bb763fa51
	lea	rdx, QWORD PTR rtvHeapDesc$[rsp]
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rax, QWORD PTR tv710[rsp]
	call	QWORD PTR [rax+112]
	test	eax, eax
	jge	SHORT $LN20@WinMain
	mov	DWORD PTR ds:0, 0
$LN20@WinMain:
; Line 151
	mov	rax, QWORD PTR d3d12Device$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 2
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	call	QWORD PTR [rax+120]
	mov	DWORD PTR d3d12RTVDescriptorSize$[rsp], eax
; Line 156
	mov	rax, QWORD PTR d3d12RTVHeap$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR rtvHandle$[rsp]
	mov	rcx, QWORD PTR d3d12RTVHeap$[rsp]
	call	QWORD PTR [rax+72]
; Line 157
	mov	DWORD PTR n$1[rsp], 0
	jmp	SHORT $LN4@WinMain
$LN2@WinMain:
	mov	eax, DWORD PTR n$1[rsp]
	inc	eax
	mov	DWORD PTR n$1[rsp], eax
$LN4@WinMain:
	mov	eax, DWORD PTR d3d12FrameCount$[rsp]
	cmp	DWORD PTR n$1[rsp], eax
	jae	$LN3@WinMain
; Line 158
	mov	eax, DWORD PTR n$1[rsp]
	lea	rax, QWORD PTR d3d12RenderTargets$[rsp+rax*8]
	mov	rcx, rax
	call	??$IID_PPV_ARGS_Helper@UID3D12Resource@@@@YAPEAPEAXPEAPEAUID3D12Resource@@@Z ; IID_PPV_ARGS_Helper<ID3D12Resource>
	mov	rcx, QWORD PTR d3d12SwapChain$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv707[rsp], rcx
	mov	r9, rax
	lea	r8, OFFSET FLAT:_GUID_696442be_a72e_4059_bc79_5b5c98040fad
	mov	edx, DWORD PTR n$1[rsp]
	mov	rcx, QWORD PTR d3d12SwapChain$[rsp]
	mov	rax, QWORD PTR tv707[rsp]
	call	QWORD PTR [rax+72]
	test	eax, eax
	jge	SHORT $LN21@WinMain
	mov	DWORD PTR ds:0, 0
$LN21@WinMain:
; Line 159
	mov	eax, DWORD PTR n$1[rsp]
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv706[rsp], rcx
	mov	r9, QWORD PTR rtvHandle$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR d3d12RenderTargets$[rsp+rax*8]
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rax, QWORD PTR tv706[rsp]
	call	QWORD PTR [rax+160]
; Line 160
	mov	eax, DWORD PTR d3d12RTVDescriptorSize$[rsp]
	mov	rcx, QWORD PTR rtvHandle$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR rtvHandle$[rsp], rax
; Line 161
	mov	eax, DWORD PTR n$1[rsp]
	lea	rax, QWORD PTR d3d12CommandAllocators$[rsp+rax*8]
	mov	rcx, rax
	call	??$IID_PPV_ARGS_Helper@UID3D12CommandAllocator@@@@YAPEAPEAXPEAPEAUID3D12CommandAllocator@@@Z ; IID_PPV_ARGS_Helper<ID3D12CommandAllocator>
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv705[rsp], rcx
	mov	r9, rax
	lea	r8, OFFSET FLAT:_GUID_6102dee4_af59_4b09_b999_b44d73f09b24
	xor	edx, edx
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rax, QWORD PTR tv705[rsp]
	call	QWORD PTR [rax+72]
	test	eax, eax
	jge	SHORT $LN22@WinMain
	mov	DWORD PTR ds:0, 0
$LN22@WinMain:
; Line 162
	jmp	$LN2@WinMain
$LN3@WinMain:
; Line 163
	lea	rcx, QWORD PTR d3d12CommandList$[rsp]
	call	??$IID_PPV_ARGS_Helper@UID3D12GraphicsCommandList@@@@YAPEAPEAXPEAPEAUID3D12GraphicsCommandList@@@Z ; IID_PPV_ARGS_Helper<ID3D12GraphicsCommandList>
	mov	ecx, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rdx, QWORD PTR d3d12Device$[rsp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv704[rsp], rdx
	mov	QWORD PTR [rsp+48], rax
	lea	rax, OFFSET FLAT:_GUID_5b160d0f_ac1b_4185_8ba8_b3ae42a5a455
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], 0
	mov	r9, QWORD PTR d3d12CommandAllocators$[rsp+rcx*8]
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rax, QWORD PTR tv704[rsp]
	call	QWORD PTR [rax+96]
	test	eax, eax
	jge	SHORT $LN23@WinMain
	mov	DWORD PTR ds:0, 0
$LN23@WinMain:
; Line 165
	mov	rax, QWORD PTR d3d12CommandList$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	call	QWORD PTR [rax+72]
	test	eax, eax
	jge	SHORT $LN24@WinMain
	mov	DWORD PTR ds:0, 0
$LN24@WinMain:
; Line 170
	lea	rcx, QWORD PTR d3d12Fence$[rsp]
	call	??$IID_PPV_ARGS_Helper@UID3D12Fence@@@@YAPEAPEAXPEAPEAUID3D12Fence@@@Z ; IID_PPV_ARGS_Helper<ID3D12Fence>
	mov	ecx, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rdx, QWORD PTR d3d12Device$[rsp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv702[rsp], rdx
	mov	QWORD PTR [rsp+32], rax
	lea	r9, OFFSET FLAT:_GUID_0a753dcf_c4d8_4b91_adf6_be5a60d95a76
	xor	r8d, r8d
	mov	rdx, QWORD PTR d3d12FenceValues$[rsp+rcx*8]
	mov	rcx, QWORD PTR d3d12Device$[rsp]
	mov	rax, QWORD PTR tv702[rsp]
	call	QWORD PTR [rax+288]
	test	eax, eax
	jge	SHORT $LN25@WinMain
	mov	DWORD PTR ds:0, 0
$LN25@WinMain:
; Line 171
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rax, QWORD PTR d3d12FenceValues$[rsp+rax*8]
	inc	rax
	mov	ecx, DWORD PTR d3d12FrameIndex$[rsp]
	mov	QWORD PTR d3d12FenceValues$[rsp+rcx*8], rax
; Line 173
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateEventA
	mov	QWORD PTR d3d12FenceEvent$[rsp], rax
; Line 174
	cmp	QWORD PTR d3d12FenceEvent$[rsp], 0
	jne	SHORT $LN26@WinMain
; Line 175
	call	QWORD PTR __imp_GetLastError
	mov	ecx, eax
	call	?HRESULT_FROM_WIN32@@YAJK@Z		; HRESULT_FROM_WIN32
	test	eax, eax
	jge	SHORT $LN27@WinMain
	mov	DWORD PTR ds:0, 0
$LN27@WinMain:
$LN26@WinMain:
; Line 179
	mov	edx, DWORD PTR nCmdShow$[rsp]
	mov	rcx, QWORD PTR windowHandle$[rsp]
	call	QWORD PTR __imp_ShowWindow
; Line 180
	mov	BYTE PTR running$[rsp], 1
$LN5@WinMain:
; Line 181
	movzx	eax, BYTE PTR running$[rsp]
	test	eax, eax
	je	$LN6@WinMain
; Line 182
	lea	rax, QWORD PTR msg$8[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
$LN7@WinMain:
; Line 183
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR msg$8[rsp]
	call	QWORD PTR __imp_PeekMessageA
	test	eax, eax
	je	SHORT $LN8@WinMain
; Line 184
	lea	rcx, QWORD PTR msg$8[rsp]
	call	QWORD PTR __imp_TranslateMessage
; Line 185
	lea	rcx, QWORD PTR msg$8[rsp]
	call	QWORD PTR __imp_DispatchMessageA
; Line 186
	jmp	SHORT $LN7@WinMain
$LN8@WinMain:
; Line 189
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rax, QWORD PTR d3d12CommandAllocators$[rsp+rax*8]
	mov	ecx, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rcx, QWORD PTR d3d12CommandAllocators$[rsp+rcx*8]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+64]
	test	eax, eax
	jge	SHORT $LN28@WinMain
	mov	DWORD PTR ds:0, 0
$LN28@WinMain:
; Line 190
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv699[rsp], rcx
	xor	r8d, r8d
	mov	rdx, QWORD PTR d3d12CommandAllocators$[rsp+rax*8]
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	mov	rax, QWORD PTR tv699[rsp]
	call	QWORD PTR [rax+80]
	test	eax, eax
	jge	SHORT $LN29@WinMain
	mov	DWORD PTR ds:0, 0
$LN29@WinMain:
; Line 192
	lea	rax, QWORD PTR resBarrier$3[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 32					; 00000020H
	rep stosb
; Line 193
	mov	DWORD PTR resBarrier$3[rsp], 0
; Line 194
	mov	DWORD PTR resBarrier$3[rsp+4], 0
; Line 195
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rax, QWORD PTR d3d12RenderTargets$[rsp+rax*8]
	mov	QWORD PTR resBarrier$3[rsp+8], rax
; Line 196
	mov	DWORD PTR resBarrier$3[rsp+20], 0
; Line 197
	mov	DWORD PTR resBarrier$3[rsp+24], 4
; Line 198
	mov	DWORD PTR resBarrier$3[rsp+16], -1	; ffffffffH
; Line 200
	mov	rax, QWORD PTR d3d12CommandList$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR resBarrier$3[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	call	QWORD PTR [rax+208]
; Line 202
	mov	rax, QWORD PTR d3d12RTVHeap$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T7[rsp]
	mov	rcx, QWORD PTR d3d12RTVHeap$[rsp]
	call	QWORD PTR [rax+72]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR rtvHandle$[rsp], rax
; Line 203
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	imul	eax, DWORD PTR d3d12RTVDescriptorSize$[rsp]
	mov	eax, eax
	mov	rcx, QWORD PTR rtvHandle$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR rtvHandle$[rsp], rax
; Line 204
	mov	rax, QWORD PTR d3d12CommandList$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR d3d12Viewport$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	call	QWORD PTR [rax+168]
; Line 205
	mov	rax, QWORD PTR d3d12CommandList$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR d3d12ScissorRect$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	call	QWORD PTR [rax+176]
; Line 206
	mov	rax, QWORD PTR d3d12CommandList$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	lea	r8, QWORD PTR rtvHandle$[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	call	QWORD PTR [rax+368]
; Line 207
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR cc$9[rsp]
	call	??0Vector4@@QEAA@MMMM@Z			; Vector4::Vector4
; Line 208
	mov	rax, QWORD PTR d3d12CommandList$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	lea	r8, QWORD PTR cc$9[rsp]
	mov	rdx, QWORD PTR rtvHandle$[rsp]
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	call	QWORD PTR [rax+384]
; Line 210
	mov	DWORD PTR resBarrier$3[rsp+20], 4
; Line 211
	mov	DWORD PTR resBarrier$3[rsp+24], 0
; Line 212
	mov	rax, QWORD PTR d3d12CommandList$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR resBarrier$3[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	call	QWORD PTR [rax+208]
; Line 214
	mov	rax, QWORD PTR d3d12CommandList$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR d3d12CommandList$[rsp]
	call	QWORD PTR [rax+72]
	test	eax, eax
	jge	SHORT $LN30@WinMain
	mov	DWORD PTR ds:0, 0
$LN30@WinMain:
; Line 216
	mov	rax, QWORD PTR d3d12CommandList$[rsp]
	mov	QWORD PTR ppCommandList$4[rsp], rax
; Line 217
	mov	rax, QWORD PTR d3d12CommandQueue$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR ppCommandList$4[rsp]
	mov	edx, 1
	mov	rcx, QWORD PTR d3d12CommandQueue$[rsp]
	call	QWORD PTR [rax+80]
; Line 219
	mov	rax, QWORD PTR d3d12SwapChain$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r8d, r8d
	mov	edx, 1
	mov	rcx, QWORD PTR d3d12SwapChain$[rsp]
	call	QWORD PTR [rax+64]
	test	eax, eax
	jge	SHORT $LN31@WinMain
	mov	DWORD PTR ds:0, 0
$LN31@WinMain:
; Line 221
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rax, QWORD PTR d3d12FenceValues$[rsp+rax*8]
	mov	QWORD PTR currentFenceValue$2[rsp], rax
; Line 223
	mov	rax, QWORD PTR d3d12CommandQueue$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR currentFenceValue$2[rsp]
	mov	rdx, QWORD PTR d3d12Fence$[rsp]
	mov	rcx, QWORD PTR d3d12CommandQueue$[rsp]
	call	QWORD PTR [rax+112]
	test	eax, eax
	jge	SHORT $LN32@WinMain
	mov	DWORD PTR ds:0, 0
$LN32@WinMain:
; Line 224
	mov	rax, QWORD PTR d3d12SwapChain$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR d3d12SwapChain$[rsp]
	call	QWORD PTR [rax+288]
	mov	DWORD PTR d3d12FrameIndex$[rsp], eax
; Line 226
	mov	rax, QWORD PTR d3d12Fence$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR d3d12Fence$[rsp]
	call	QWORD PTR [rax+64]
	mov	ecx, DWORD PTR d3d12FrameIndex$[rsp]
	cmp	rax, QWORD PTR d3d12FenceValues$[rsp+rcx*8]
	jae	SHORT $LN33@WinMain
; Line 227
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rcx, QWORD PTR d3d12Fence$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv685[rsp], rcx
	mov	r8, QWORD PTR d3d12FenceEvent$[rsp]
	mov	rdx, QWORD PTR d3d12FenceValues$[rsp+rax*8]
	mov	rcx, QWORD PTR d3d12Fence$[rsp]
	mov	rax, QWORD PTR tv685[rsp]
	call	QWORD PTR [rax+72]
	test	eax, eax
	jge	SHORT $LN34@WinMain
	mov	DWORD PTR ds:0, 0
$LN34@WinMain:
; Line 228
	xor	r8d, r8d
	mov	edx, -1					; ffffffffH
	mov	rcx, QWORD PTR d3d12FenceEvent$[rsp]
	call	QWORD PTR __imp_WaitForSingleObjectEx
$LN33@WinMain:
; Line 230
	mov	rax, QWORD PTR currentFenceValue$2[rsp]
	inc	rax
	mov	ecx, DWORD PTR d3d12FrameIndex$[rsp]
	mov	QWORD PTR d3d12FenceValues$[rsp+rcx*8], rax
; Line 232
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rcx, QWORD PTR d3d12CommandQueue$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv684[rsp], rcx
	mov	r8, QWORD PTR d3d12FenceValues$[rsp+rax*8]
	mov	rdx, QWORD PTR d3d12Fence$[rsp]
	mov	rcx, QWORD PTR d3d12CommandQueue$[rsp]
	mov	rax, QWORD PTR tv684[rsp]
	call	QWORD PTR [rax+112]
	test	eax, eax
	jge	SHORT $LN35@WinMain
	mov	DWORD PTR ds:0, 0
$LN35@WinMain:
; Line 233
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rcx, QWORD PTR d3d12Fence$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv683[rsp], rcx
	mov	r8, QWORD PTR d3d12FenceEvent$[rsp]
	mov	rdx, QWORD PTR d3d12FenceValues$[rsp+rax*8]
	mov	rcx, QWORD PTR d3d12Fence$[rsp]
	mov	rax, QWORD PTR tv683[rsp]
	call	QWORD PTR [rax+72]
	test	eax, eax
	jge	SHORT $LN36@WinMain
	mov	DWORD PTR ds:0, 0
$LN36@WinMain:
; Line 234
	xor	r8d, r8d
	mov	edx, -1					; ffffffffH
	mov	rcx, QWORD PTR d3d12FenceEvent$[rsp]
	call	QWORD PTR __imp_WaitForSingleObjectEx
; Line 235
	mov	eax, DWORD PTR d3d12FrameIndex$[rsp]
	mov	rax, QWORD PTR d3d12FenceValues$[rsp+rax*8]
	inc	rax
	mov	ecx, DWORD PTR d3d12FrameIndex$[rsp]
	mov	QWORD PTR d3d12FenceValues$[rsp+rcx*8], rax
; Line 237
	jmp	$LN5@WinMain
$LN6@WinMain:
; Line 238
	xor	eax, eax
; Line 239
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 768				; 00000300H
	pop	rdi
	ret	0
WinMain	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?HRESULT_FROM_WIN32@@YAJK@Z
_TEXT	SEGMENT
tv68 = 0
x$ = 32
?HRESULT_FROM_WIN32@@YAJK@Z PROC			; HRESULT_FROM_WIN32, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\shared\winerror.h
; Line 29051
$LN5:
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 24
	cmp	DWORD PTR x$[rsp], 0
	jg	SHORT $LN3@HRESULT_FR
	mov	eax, DWORD PTR x$[rsp]
	mov	DWORD PTR tv68[rsp], eax
	jmp	SHORT $LN4@HRESULT_FR
$LN3@HRESULT_FR:
	mov	eax, DWORD PTR x$[rsp]
	and	eax, 65535				; 0000ffffH
	or	eax, 458752				; 00070000H
	bts	eax, 31
	mov	DWORD PTR tv68[rsp], eax
$LN4@HRESULT_FR:
	mov	eax, DWORD PTR tv68[rsp]
	add	rsp, 24
	ret	0
?HRESULT_FROM_WIN32@@YAJK@Z ENDP			; HRESULT_FROM_WIN32
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
$LN2@vector:
	mov	rax, QWORD PTR __n$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR __n$[rsp]
	dec	rax
	mov	QWORD PTR __n$[rsp], rax
	cmp	QWORD PTR tv66[rsp], 0
	jbe	SHORT $LN3@vector
	mov	rcx, QWORD PTR __t$[rsp]
	call	QWORD PTR __f$[rsp]
	mov	rax, QWORD PTR __s$[rsp]
	mov	rcx, QWORD PTR __t$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR __t$[rsp], rax
	jmp	SHORT $LN2@vector
$LN3@vector:
	add	rsp, 56					; 00000038H
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
